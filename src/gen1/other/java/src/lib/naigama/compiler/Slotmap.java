
package lib.naigama.compiler;

public class Slotmap {

  public static final int SLOT_GRAMMAR = 0;
  public static final int SLOT_S = 1;
  public static final int SLOT_COMMENT = 2;
  public static final int SLOT_END = 3;
  public static final int SLOT_DEFINITION = 4;
  public static final int SLOT_SINGLE_EXPRESSION = 5;
  public static final int SLOT_RULE = 6;
  public static final int SLOT_RULE_IDENT = 7;
  public static final int SLOT_EXPRESSION = 8;
  public static final int SLOT_EXPRESSION_TERMS = 9;
  public static final int SLOT_EXPRESSION_TERMS_1 = 10;
  public static final int SLOT_EXPRESSION_TERMS_2 = 11;
  public static final int SLOT_TERMS = 12;
  public static final int SLOT_TERMS_TERM = 13;
  public static final int SLOT_TERM = 14;
  public static final int SLOT_TERM_ENDOWEDMATCHER = 15;
  public static final int SLOT_ENDOWEDMATCHER = 16;
  public static final int SLOT_ENDOWEDMATCHER_NOTAND = 17;
  public static final int SLOT_ENDOWEDMATCHER_QUANTIFIER = 18;
  public static final int SLOT_QUANTIFIER = 19;
  public static final int SLOT_QUANTIFIER_1 = 20;
  public static final int SLOT_QUANTIFIER_2 = 21;
  public static final int SLOT_QUANTIFIER_3 = 22;
  public static final int SLOT_QUANTIFIER_4 = 23;
  public static final int SLOT_QUANTIFIER_5 = 24;
  public static final int SLOT_MATCHER = 25;
  public static final int SLOT_MATCHER_ANY = 26;
  public static final int SLOT_MATCHER_SET = 27;
  public static final int SLOT_MATCHER_STRING = 28;
  public static final int SLOT_MATCHER_BITMASK = 29;
  public static final int SLOT_MATCHER_HEXLITERAL = 30;
  public static final int SLOT_MATCHER_VARCAPTURE = 31;
  public static final int SLOT_MATCHER_CAPTURE = 32;
  public static final int SLOT_MATCHER_GROUP = 33;
  public static final int SLOT_MATCHER_MACRO = 34;
  public static final int SLOT_MATCHER_VARREFERENCE = 35;
  public static final int SLOT_MATCHER_REFERENCE = 36;
  public static final int SLOT_BITMASK = 37;
  public static final int SLOT_VARCAPTURE = 38;
  public static final int SLOT_VARCAPTURE_IDENT = 39;
  public static final int SLOT_VARCAPTURE_CBCLOSE = 40;
  public static final int SLOT_CAPTURE = 41;
  public static final int SLOT_CAPTURE_CBCLOSE = 42;
  public static final int SLOT_GROUP = 43;
  public static final int SLOT_GROUP_BCLOSE = 44;
  public static final int SLOT_CAPTUREEND = 45;
  public static final int SLOT_SET = 46;
  public static final int SLOT_SET_SETNOT = 47;
  public static final int SLOT_SET_NRTV = 48;
  public static final int SLOT_SET_NRTV_1 = 49;
  public static final int SLOT_SET_NRTV_2 = 50;
  public static final int SLOT_SET_ABCLOSE = 51;
  public static final int SLOT_VARREFERENCE = 52;
  public static final int SLOT_VARREFERENCE_IDENT = 53;
  public static final int SLOT_VARREFERENCE_NUMBER = 54;
  public static final int SLOT_REFERENCE = 55;
  public static final int SLOT_REPLACE = 56;
  public static final int SLOT_REPLACE_REPLACETERMS = 57;
  public static final int SLOT_REPLACETERMS = 58;
  public static final int SLOT_REPLACETERM = 59;
  public static final int SLOT_REPLACETERM_STRINGLITERAL = 60;
  public static final int SLOT_REPLACETERM_HEXLITERAL = 61;
  public static final int SLOT_REPLACETERM_VARREFERENCE = 62;
  public static final int SLOT_RECYCLE = 63;
  public static final int SLOT_RECYCLE_IDENT = 64;
  public static final int SLOT_IDENT = 65;
  public static final int SLOT_LEFTARROW = 66;
  public static final int SLOT_RIGHTARROW = 67;
  public static final int SLOT_FATARROW = 68;
  public static final int SLOT_NOT = 69;
  public static final int SLOT_AND = 70;
  public static final int SLOT_MACRO = 71;
  public static final int SLOT_HEXLITERAL = 72;
  public static final int SLOT_NUMBER = 73;
  public static final int SLOT_STRINGLITERAL = 74;
  public static final int SLOT_STRING = 75;
  public static final int SLOT_OR = 76;
  public static final int SLOT_ANY = 77;
  public static final int SLOT_NOTHING = 78;
  public static final int SLOT_CBOPEN = 79;
  public static final int SLOT_COLON = 80;
  public static final int SLOT_CBCLOSE = 81;
  public static final int SLOT_BOPEN = 82;
  public static final int SLOT_BCLOSE = 83;
  public static final int SLOT_ABOPEN = 84;
  public static final int SLOT_ABCLOSE = 85;
  public static final int SLOT_SETNOT = 86;


  private int slot = -1;
  public Slotmap(int s) { slot=s; }
  public String toString()
  {
    switch(slot) {
    case 85: return "SLOT_ABCLOSE";
    case 84: return "SLOT_ABOPEN";
    case 70: return "SLOT_AND";
    case 77: return "SLOT_ANY";
    case 83: return "SLOT_BCLOSE";
    case 37: return "SLOT_BITMASK";
    case 82: return "SLOT_BOPEN";
    case 41: return "SLOT_CAPTURE";
    case 45: return "SLOT_CAPTUREEND";
    case 42: return "SLOT_CAPTURE_CBCLOSE";
    case 81: return "SLOT_CBCLOSE";
    case 79: return "SLOT_CBOPEN";
    case 80: return "SLOT_COLON";
    case 2: return "SLOT_COMMENT";
    case 4: return "SLOT_DEFINITION";
    case 3: return "SLOT_END";
    case 16: return "SLOT_ENDOWEDMATCHER";
    case 17: return "SLOT_ENDOWEDMATCHER_NOTAND";
    case 18: return "SLOT_ENDOWEDMATCHER_QUANTIFIER";
    case 8: return "SLOT_EXPRESSION";
    case 9: return "SLOT_EXPRESSION_TERMS";
    case 10: return "SLOT_EXPRESSION_TERMS_1";
    case 11: return "SLOT_EXPRESSION_TERMS_2";
    case 68: return "SLOT_FATARROW";
    case 0: return "SLOT_GRAMMAR";
    case 43: return "SLOT_GROUP";
    case 44: return "SLOT_GROUP_BCLOSE";
    case 72: return "SLOT_HEXLITERAL";
    case 65: return "SLOT_IDENT";
    case 66: return "SLOT_LEFTARROW";
    case 71: return "SLOT_MACRO";
    case 25: return "SLOT_MATCHER";
    case 26: return "SLOT_MATCHER_ANY";
    case 29: return "SLOT_MATCHER_BITMASK";
    case 32: return "SLOT_MATCHER_CAPTURE";
    case 33: return "SLOT_MATCHER_GROUP";
    case 30: return "SLOT_MATCHER_HEXLITERAL";
    case 34: return "SLOT_MATCHER_MACRO";
    case 36: return "SLOT_MATCHER_REFERENCE";
    case 27: return "SLOT_MATCHER_SET";
    case 28: return "SLOT_MATCHER_STRING";
    case 31: return "SLOT_MATCHER_VARCAPTURE";
    case 35: return "SLOT_MATCHER_VARREFERENCE";
    case 69: return "SLOT_NOT";
    case 78: return "SLOT_NOTHING";
    case 73: return "SLOT_NUMBER";
    case 76: return "SLOT_OR";
    case 19: return "SLOT_QUANTIFIER";
    case 20: return "SLOT_QUANTIFIER_1";
    case 21: return "SLOT_QUANTIFIER_2";
    case 22: return "SLOT_QUANTIFIER_3";
    case 23: return "SLOT_QUANTIFIER_4";
    case 24: return "SLOT_QUANTIFIER_5";
    case 63: return "SLOT_RECYCLE";
    case 64: return "SLOT_RECYCLE_IDENT";
    case 55: return "SLOT_REFERENCE";
    case 56: return "SLOT_REPLACE";
    case 59: return "SLOT_REPLACETERM";
    case 58: return "SLOT_REPLACETERMS";
    case 61: return "SLOT_REPLACETERM_HEXLITERAL";
    case 60: return "SLOT_REPLACETERM_STRINGLITERAL";
    case 62: return "SLOT_REPLACETERM_VARREFERENCE";
    case 57: return "SLOT_REPLACE_REPLACETERMS";
    case 67: return "SLOT_RIGHTARROW";
    case 6: return "SLOT_RULE";
    case 7: return "SLOT_RULE_IDENT";
    case 1: return "SLOT_S";
    case 46: return "SLOT_SET";
    case 86: return "SLOT_SETNOT";
    case 51: return "SLOT_SET_ABCLOSE";
    case 48: return "SLOT_SET_NRTV";
    case 49: return "SLOT_SET_NRTV_1";
    case 50: return "SLOT_SET_NRTV_2";
    case 47: return "SLOT_SET_SETNOT";
    case 5: return "SLOT_SINGLE_EXPRESSION";
    case 75: return "SLOT_STRING";
    case 74: return "SLOT_STRINGLITERAL";
    case 14: return "SLOT_TERM";
    case 12: return "SLOT_TERMS";
    case 13: return "SLOT_TERMS_TERM";
    case 15: return "SLOT_TERM_ENDOWEDMATCHER";
    case 38: return "SLOT_VARCAPTURE";
    case 40: return "SLOT_VARCAPTURE_CBCLOSE";
    case 39: return "SLOT_VARCAPTURE_IDENT";
    case 52: return "SLOT_VARREFERENCE";
    case 53: return "SLOT_VARREFERENCE_IDENT";
    case 54: return "SLOT_VARREFERENCE_NUMBER";
    default: return "Unknown slot";
    }
  }
}
