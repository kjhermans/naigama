-- Grammar:

CERTIFICATE        <- SEQUENCE BERLENGTH <<ruint32:$_:CERTCONTENT>>

BERLENGTH          <- & |00|80| { . } / 0x81 { . } / 0x82 { .. } / 0x83 { ... } / 0x84 { .... }

CERTCONTENT        <- TBSCERTIFICATE
                  SIGNATUREALGORITHM
                  SIGNATUREVALUE
TBSCERTIFICATE     <- SEQUENCE BERLENGTH <<ruint32:$_:TBSCERTCONTENT>>
TBSCERTCONTENT     <- VERSION
                      SERIALNUMBER
                      SIGNATURE
                      ISSUER
                      VALIDITY
                      SUBJECT
                      SUBJECTPUBKEYINFO
                      ISSUERUNIQUEID ?
VERSION            <- GCTXSPCLASS
SERIALNUMBER       <- INTEGER
SIGNATURE          <- SEQUENCE BERLENGTH <<ruint32:$_:ALGIDENTCONT>>
ALGIDENTCONT       <- ALGORITHM
                      PARAMETERS ?
ALGORITHM          <- { OID }
PARAMETERS         <- ANY
ISSUER             <- SEQUENCE BERLENGTH <<ruint32:$_:ISSUERCONTENT>>
ISSUERCONTENT      <- { ISSUERNV }*
ISSUERNV           <- SET BERLENGTH <<ruint32:$_:ISSUERNV_>>
ISSUERNV_          <- SEQUENCE BERLENGTH <<ruint32:$_:ISSUERNV__>>
ISSUERNV__         <- ISSUERNAME ISSUERVALUE
ISSUERNAME         <- { OID }
ISSUERVALUE        <- { ANY }
SIGNATUREALGORITHM <- SEQUENCE BERLENGTH <<ruint32:$_:SIGALGCONTENT>>
SIGALGCONTENT      <- OID ANY?
SIGNATUREVALUE     <- BITSTRING BERLENGTH <<ruint32:$_:SIGVALCONTENT>>
SIGVALCONTENT      <- { .* }
VALIDITY           <- SEQUENCE BERLENGTH <<ruint32:$_:VALIDITYCONTENT>>
VALIDITYCONTENT    <- VALIDFROM VALIDUNTIL
VALIDFROM          <- TIMESTAMP
VALIDUNTIL         <- TIMESTAMP
SUBJECT            <- SEQUENCE BERLENGTH <<ruint32:$_:SUBJECTCONTENT>>
SUBJECTCONTENT     <- SUBJENTRY*
SUBJENTRY          <- SET BERLENGTH <<ruint32:$_:SUBJENTRYNV_>>
SUBJENTRYNV_       <- SEQUENCE BERLENGTH <<ruint32:$_:SUBJENTRYNV__>>
SUBJENTRYNV__      <- SUBJENTRYNAME SUBJENTRYVALUE
SUBJENTRYNAME      <- { OID }
SUBJENTRYVALUE     <- { ANY }
SUBJECTPUBKEYINFO  <- SEQUENCE BERLENGTH <<ruint32:$_:SPKICONTENT>>
SPKICONTENT        <- { ANY }*
ISSUERUNIQUEID     <- CTXSPCLASS BERLENGTH <<ruint32:$_:ISSUERUIDCONTENT>>
ISSUERUIDCONTENT   <- { ANY }*

ANY                <- GENERICLIST / OID / INTEGER / IPV4 / NULL /
                      BSTRING / PSTRING / ISTRING / USTRING / OSTRING /
                      GENERICSET / GCTXSPCLASS / TIMESTAMP /
                      BOOLEAN

GENERICLIST        <- SEQUENCE BERLENGTH <<ruint32:$_:LISTCONTENT>>
GENERICSET         <- SET BERLENGTH <<ruint32:$_:LISTCONTENT>>
GCTXSPCLASS        <- CTXSPCLASS BERLENGTH <<ruint32:$_:LISTCONTENT>>
LISTCONTENT        <- { ANY }*

SEQUENCE           <- 0x30
SET                <- 0x31
CTXSPCLASS         <- 0xa3 / 0xa0
INTEGER            <- INTEGERTYPE BERLENGTH <<ruint32:$_:INTEGERVALUE>>
INTEGERTYPE        <- 0x02
INTEGERVALUE       <- { .* }
IPV4               <- 0x40 0x04 { .... }
NULL               <- 0x05 0x00
BITSTRING          <- 0x03
TIMESTAMP          <- 0x17 BERLENGTH <<ruint32:$_:TIMECONTENT>>
TIMECONTENT        <- { .* }
BOOLEAN            <- 0x01 0x01 { . }

PRINTABLESTRING    <- 0x13
IASTRING           <- 0x16
UTF8STRING         <- 0x0c
OCTETSTRING        <- 0x04

BSTRING            <- BITSTRING BERLENGTH <<ruint32:$_:STRINGCNT>>
PSTRING            <- PRINTABLESTRING BERLENGTH <<ruint32:$_:STRINGCNT>>
ISTRING            <- IASTRING BERLENGTH <<ruint32:$_:STRINGCNT>>
USTRING            <- UTF8STRING BERLENGTH <<ruint32:$_:STRINGCNT>>
OSTRING            <- OCTETSTRING BERLENGTH <<ruint32:$_:STRINGCNT>>
STRINGCNT          <- { .* }

OID                <- 0x06 BERLENGTH <<ruint32:$_:OIDVALUE>>
OIDVALUE           <- { { . } { |80|80|* |00|80| }* }

-- Hexinput:

30820259308201dfa003020102021066f23daf87de8bb14aea0c573101c2
ec300a06082a8648ce3d0403033065310b3009060355040613025553311e
301c060355040a13154d6963726f736f667420436f72706f726174696f6e
313630340603550403132d4d6963726f736f66742045434320526f6f7420
436572746966696361746520417574686f726974792032303137301e170d
3139313231383233303634355a170d3432303731383233313630345a3065
310b3009060355040613025553311e301c060355040a13154d6963726f73
6f667420436f72706f726174696f6e313630340603550403132d4d696372
6f736f66742045434320526f6f7420436572746966696361746520417574
686f7269747920323031373076301006072a8648ce3d020106052b810400
2203620004d4bc3d024275411323cd80048602512f6aa881620b65ccf6ca
9d1e6f4a6651a203d99d91fab616b18c6ede7ccddb79a62fcebbce712fe5
a5ab28ec63046699f8faf2931005e1812842e3c668f4e61b84604a89afed
790f3bcef1f644f50178c0a3543052300e0603551d0f0101ff0404030201
86300f0603551d130101ff040530030101ff301d0603551d0e04160414c8
cb997270520cf8e6beb20457292acf4210ed35301006092b060104018237
15010403020100300a06082a8648ce3d0403030368003065023058f24dea
0cf95f5eee6029cb3af2dbd63284193f7cd52fc2b1cc93ae50bb0932c6c6
ed7ec9369412e4688506a21bd02f02310099e916b40efa5648d4a4301691
78db548c65018ae75066c231b739bab81a22074efc6b541620ff2bb5e74c
0c4da64f73

-- Result:

OK
