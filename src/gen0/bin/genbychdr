#!/usr/bin/perl

my $bycfile = shift @ARGV;
my $ident = shift;

my $bytecode = absorb_binary($bycfile);

if (!defined($ident)) {
  $bycfile =~ s/[^a-zA-Z]//g;
  $bycfile = uc($bycfile);
  $ident = $bycfile;
}

print "#ifndef _BYTECODE_" . $ident . "_H_
#define _BYTECODE_" . $ident . "_H_

#define _BYTECODE_" . $ident . " \\\n";

for (my $i=0; $i < length($bytecode); $i++) {
  print sprintf("0x%.2x", ord(substr($bytecode, $i, 1)));
  if ($i < length($bytecode)-1) {
    print ", ";
    if ((($i - 7) % 8) == 0) {
      print "\\\n";
    }
  }
}

print "\n\n#endif\n";

exit 0; ##---- end ---------------------------------------------------------##

sub absorb_binary
{
  my $path = shift; die "$path not found" if (! -f $path);
  my $result = '';
  die "Error $@ opening $bytecodefile" if (!open(FILE, '<', $path));
  binmode FILE;
  my $buf;
  while (1) {
    my $n = sysread(FILE, $buf, 1024);
    if (!$n) {
      close FILE;
      return $result;
    }
    $result .= $buf;
  }
}

1;
