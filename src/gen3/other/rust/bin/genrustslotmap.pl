#!/usr/bin/perl

my $slotmapfile = shift @ARGV;
my $prefix = shift @ARGV || 'SLOT';

my $slotmap = absorb_binary($slotmapfile);

print "/* Generated by $0 in $slotmapfile */

#[allow(non_camel_case_types)]

pub enum NaigCompilerSlotmap {

";

while (length($slotmap)) {
  $slotmap =~ s/^.(.)(.)(.)//s;# || die "Not a proper slotmap file (1)";
  my $slot = ord($1) << 16 | ord($2) << 8 | ord($3);
  #$lotmap =~ s/^....//s || die "Not a proper slotmap file (2)";
  $slotmap = substr($slotmap, 4);
  $slotmap =~ s/^([^\0]+)\0//;# || die "Not a proper slotmap file (3)";
  print "  ".$prefix."_" . $1 . " = $slot,\n";
}

print "
}
";

exit 0; ##---- end ---------------------------------------------------------##

sub absorb_binary
{
  my $path = shift; die "$path not found" if (! -f $path);
  my $result = '';
  die "Error $@ opening $bytecodefile" if (!open(FILE, '<', $path));
  binmode FILE;
  my $buf;
  while (1) {
    my $n = sysread(FILE, $buf, 1024);
    if (!$n) {
      close FILE;
      return $result;
    }
    $result .= $buf;
  }
}

1;
